apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-serving
  namespace: mlflow-serving
  labels:
    app.kubernetes.io/name: mlflow-serving
    app.kubernetes.io/component: api-server
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: mlflow-genai-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: mlflow-serving
      app.kubernetes.io/component: api-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mlflow-serving
        app.kubernetes.io/component: api-server
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/api/v1/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: mlflow-serving
        image: mlflow-serving:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: metrics
          containerPort: 8001
          protocol: TCP
        env:
        # Load configuration from ConfigMap
        - name: HOST
          valueFrom:
            configMapKeyRef:
              name: mlflow-serving-config
              key: HOST
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: mlflow-serving-config
              key: PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: mlflow-serving-config
              key: LOG_LEVEL
        - name: WORKERS
          valueFrom:
            configMapKeyRef:
              name: mlflow-serving-config
              key: WORKERS
        - name: MLFLOW_TRACKING_URI
          valueFrom:
            configMapKeyRef:
              name: mlflow-serving-config
              key: MLFLOW_TRACKING_URI
        - name: MLFLOW_MODEL_URI
          valueFrom:
            configMapKeyRef:
              name: mlflow-serving-config
              key: MLFLOW_MODEL_URI
        - name: MLFLOW_ARTIFACT_PATH
          valueFrom:
            configMapKeyRef:
              name: mlflow-serving-config
              key: MLFLOW_ARTIFACT_PATH
        - name: S3_ENDPOINT_URL
          valueFrom:
            configMapKeyRef:
              name: mlflow-serving-config
              key: S3_ENDPOINT_URL
        - name: S3_BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: mlflow-serving-config
              key: S3_BUCKET_NAME
        - name: S3_REGION
          valueFrom:
            configMapKeyRef:
              name: mlflow-serving-config
              key: S3_REGION
        - name: MODEL_CACHE_DIR
          valueFrom:
            configMapKeyRef:
              name: mlflow-serving-config
              key: MODEL_CACHE_DIR
        - name: MAX_MODEL_CACHE_SIZE
          valueFrom:
            configMapKeyRef:
              name: mlflow-serving-config
              key: MAX_MODEL_CACHE_SIZE
        - name: METRICS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: mlflow-serving-config
              key: METRICS_ENABLED
        # Load secrets
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: mlflow-serving-secrets
              key: S3_ACCESS_KEY
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: mlflow-serving-secrets
              key: S3_SECRET_KEY
        # Pod information
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        
        # Volume mounts
        volumeMounts:
        - name: model-cache
          mountPath: /tmp/mlflow_models
        - name: tmp-volume
          mountPath: /tmp
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /api/v1/ready
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        # Startup probe for slow model loading
        startupProbe:
          httpGet:
            path: /api/v1/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30  # Allow 5 minutes for startup
          successThreshold: 1
        
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false  # False due to model caching
          capabilities:
            drop:
            - ALL
      
      # Init container for model pre-download (optional)
      initContainers:
      - name: model-downloader
        image: mlflow-serving:latest
        command: ["python", "scripts/download_artifacts.py"]
        env:
        - name: MLFLOW_ARTIFACT_PATH
          valueFrom:
            configMapKeyRef:
              name: mlflow-serving-config
              key: MLFLOW_ARTIFACT_PATH
        - name: S3_ENDPOINT_URL
          valueFrom:
            configMapKeyRef:
              name: mlflow-serving-config
              key: S3_ENDPOINT_URL
        - name: S3_BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: mlflow-serving-config
              key: S3_BUCKET_NAME
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: mlflow-serving-secrets
              key: S3_ACCESS_KEY
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: mlflow-serving-secrets
              key: S3_SECRET_KEY
        - name: MODEL_CACHE_DIR
          valueFrom:
            configMapKeyRef:
              name: mlflow-serving-config
              key: MODEL_CACHE_DIR
        volumeMounts:
        - name: model-cache
          mountPath: /tmp/mlflow_models
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      
      # Volumes
      volumes:
      - name: model-cache
        emptyDir:
          sizeLimit: 2Gi
      - name: tmp-volume
        emptyDir:
          sizeLimit: 1Gi
      
      # Pod scheduling
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: ["mlflow-serving"]
              topologyKey: kubernetes.io/hostname
      
      # Tolerations (if needed for specific nodes)
      tolerations: []
      
      # Node selector (if needed)
      nodeSelector: {}
      
      # Service account
      serviceAccountName: default
      
      # DNS policy
      dnsPolicy: ClusterFirst
      
      # Restart policy
      restartPolicy: Always
      
      # Termination grace period
      terminationGracePeriodSeconds: 30